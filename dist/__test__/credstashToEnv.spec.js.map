{"version":3,"sources":["../../src/__test__/credstashToEnv.spec.js"],"names":["jest","mock","describe","handlersDir","resolve","__dirname","classToTest","beforeAll","setReadDirSyncData","test","expectedConfig","region","table","projectName","credstashToEnv","expect","config","toEqual","handlers","handler","program","Command","constructor","name","credstash","toBe"],"mappings":";;AAAA;;;;AACA;;;;AACA;;AACA;;;;;;AAEAA,KAAKC,IAAL,CAAU,IAAV;AACA;;AAEAC,SAAS,gBAAT,EAA2B,YAAM;AAC/B,MAAMC,cAAc,eAAKC,OAAL,CAAaC,SAAb,EAAwB,UAAxB,CAApB;AACA,MAAIC,cAAc,IAAlB;;AAEAC,YAAU,YAAM;AACd,iBAAGC,kBAAH,CAAsB,CAAC,GAAD,EAAM,GAAN,CAAtB;AACAF,kBAAc,6BAAmB,EAAEH,wBAAF,EAAnB,CAAd;AACD,GAHD;;AAKAD,WAAS,eAAT,EAA0B,YAAM;AAC9BO,SAAK,8BAAL,EAAqC,YAAM;AACzC,UAAMC,iBAAiB;AACrBP,gCADqB;AAErBQ,gBAAQ,WAFa;AAGrBC,eAAO,kBAHc;AAIrBC,qBAAa;AAJQ,OAAvB;AAMA,UAAMC,iBAAiB,6BAAmBJ,cAAnB,CAAvB;;AAEAK,aAAOD,eAAeE,MAAtB,EAA8BC,OAA9B,CAAsCP,cAAtC;AACD,KAVD;AAWAD,SAAK,sCAAL,EAA6C,YAAM;AACjD,UAAMK,iBAAiB,6BAAmB,EAAED,aAAa,MAAf,EAAnB,CAAvB;;AAEA,UAAMH,iBAAiB;AACrBP,gCADqB;AAErBQ,gBAAQ,WAFa;AAGrBC,eAAO,kBAHc;AAIrBC,qBAAa;AAJQ,OAAvB;AAMAE,aAAOD,eAAeE,MAAtB,EAA8BC,OAA9B,CAAsCP,cAAtC;AACD,KAVD;AAWD,GAvBD;AAwBAR,WAAS,aAAT,EAAwB,YAAM;AAC5BO,SAAK,oCAAL,EAA2C,YAAM;AAAA;AAAA;AAAA;;AAAA;AAC/C,6BAAsBH,YAAYY,QAAlC,8HAA4C;AAAA,cAAjCC,OAAiC;;AAC1CJ,iBAAOI,QAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,WAAxB,CAAoCC,IAA3C,EAAiDN,OAAjD,CAAyD,mBAAQK,WAAR,CAAoBC,IAA7E;AACAR,iBAAO,CAACI,QAAQK,SAAhB,EAA2BC,IAA3B,CAAgC,KAAhC,EAF0C,CAEF;AACxCV,iBAAOI,QAAQN,WAAf,EAA4BI,OAA5B,CAAoC,kBAApC;AACD;AAL8C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMhD,KAND;AAOD,GARD;AASAf,WAAS,WAAT,EAAsB,YAAM,CAAE,CAA9B,EA1C+B,CA0CE;AAClC,CA3CD","file":"credstashToEnv.spec.js","sourcesContent":["import fs from 'fs';\nimport path from 'path';\nimport { Command } from 'commander';\nimport CredstashToEnv from '../CredstashToEnv';\n\njest.mock('fs');\n// jest.mock('nodecredstash');\n\ndescribe('CredstashToEnv', () => {\n  const handlersDir = path.resolve(__dirname, 'fixtures');\n  let classToTest = null;\n\n  beforeAll(() => {\n    fs.setReadDirSyncData(['a', 'b']);\n    classToTest = new CredstashToEnv({ handlersDir });\n  });\n\n  describe('constructor()', () => {\n    test('have a default configuration', () => {\n      const expectedConfig = {\n        handlersDir,\n        region: 'eu-west-1',\n        table: 'credential-store',\n        projectName: 'test',\n      };\n      const credstashToEnv = new CredstashToEnv(expectedConfig);\n\n      expect(credstashToEnv.config).toEqual(expectedConfig);\n    });\n    test('can change the default configuration', () => {\n      const credstashToEnv = new CredstashToEnv({ projectName: 'test' });\n\n      const expectedConfig = {\n        handlersDir,\n        region: 'eu-west-1',\n        table: 'credential-store',\n        projectName: 'test',\n      };\n      expect(credstashToEnv.config).toEqual(expectedConfig);\n    });\n  });\n  describe('configure()', () => {\n    test('should have the handler configured', () => {\n      for (const handler of classToTest.handlers) {\n        expect(handler.program.Command.constructor.name).toEqual(Command.constructor.name);\n        expect(!handler.credstash).toBe(false); // TODO: Better test the credstash exists\n        expect(handler.projectName).toEqual('credstash-to-env');\n      }\n    });\n  });\n  describe('execute()', () => {}); // TODO: Don't know how to test it yet\n});\n"]}