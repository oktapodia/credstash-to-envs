{"version":3,"sources":["../src/CredstashToEnv.js"],"names":["defaultConfig","handlersDir","region","table","projectName","debug","CredstashToEnv","config","configure","credstash","awsOpts","version","handlers","Handler","h","default","option","sort","parse","process","argv","main","confirm","overwrite","exit","params","handler","exec","handleAndWrite"],"mappings":";;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;;;;;AAEA,IAAMA,gBAAgB;AACpBC,eAAa,YADO;AAEpBC,UAAQ,WAFY;AAGpBC,SAAO,kBAHa;AAIpBC,eAAa;AAJO,CAAtB;;AAOA,IAAMC,QAAQ,qBAAS,mBAAT,CAAd;;IAEqBC,c;AACnB,4BAAyB;AAAA,QAAbC,MAAa,uEAAJ,EAAI;;AAAA;;AACvB,SAAKA,MAAL,GAAc,oBAAOP,aAAP,EAAsBO,MAAtB,CAAd;AACA,SAAKC,SAAL;AACD;;;;gCAEW;AAAA;;AACVH,YAAM,wBAAN;AACA,UAAMI,YAAY,4BAAc,EAAEN,OAAO,KAAKI,MAAL,CAAYJ,KAArB,EAA4BO,SAAS,EAAER,QAAQ,KAAKK,MAAL,CAAYL,MAAtB,EAArC,EAAd,CAAlB;;AAEAG,YAAM,qBAAN;AACA,0BACGM,OADH,CACW,OADX;;AAGAN,YAAM,sBAAN;AACA,WAAKO,QAAL,GAAgB,iBAAI,iCAAY,KAAKL,MAAL,CAAYN,WAAxB,CAAJ,EAA0C,UAACY,OAAD,EAAa;AACrE,YAAMC,IAAI,IAAID,QAAQE,OAAZ,sBAA6BN,SAA7B,EAAwC,MAAKF,MAAL,CAAYH,WAApD,CAAV;AACA,YAAIU,EAAEE,MAAN,EAAc;AACZF,YAAEE,MAAF;AACD;;AAED,eAAOF,CAAP;AACD,OAPe,CAAhB;;AASAT,YAAM,kBAAN;AACA,WAAKO,QAAL,CAAcK,IAAd;AACA,0BAAQC,KAAR,CAAcC,QAAQC,IAAtB;AACD;;;;;;;;;;AAGOR,wB,GAAW,KAAKA,Q;kDACf,wDAAG,SAAUS,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACJ,sCADI;AAAA;AAAA;AAAA;;AAAA;AAAA,iCAEkB,mBAAOC,OAAP,CAAe,gEAAf,CAFlB;;AAAA;AAEAC,mCAFA;;AAAA,8BAIDA,SAJC;AAAA;AAAA;AAAA;;AAKJlB,gCAAM,2BAAN;;AAEAc,kCAAQK,IAAR;AAPI;;AAAA;;AAYP;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AACKC,4CADL,GACc,EADd;AAAA;AAAA;AAAA;AAAA;AAAA,kDAEuBb,QAFvB;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEYc,6CAFZ;AAAA;AAAA,oDAGmB,EAHnB;AAAA;AAAA,6CAG6BA,QAAQC,IAAR,CAAaF,MAAb,CAH7B;;AAAA;AAAA;AAGGA,4CAHH;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,6CAMO,kCAAaA,MAAb,CANP;;AAAA;AAOCN,8CAAQK,IAAR;;AAPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,qCAAeI,cAAf;AAAA;AAAA;;AAAA,mCAAeA,cAAf;AAAA,gCAAD;;AAZQ;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAUP,IAAV;AAAA,iBAAH,E;;;;;;;;;;;;;;;;;;;;;kBA/BUf,c","file":"CredstashToEnv.js","sourcesContent":["import debugPkg from 'debug';\nimport prompt from 'co-prompt';\nimport { assign, map } from 'lodash';\nimport program from 'commander';\nimport Credstash from 'nodecredstash';\nimport co from 'co';\nimport { getHandlers, sortHandlers } from './helpers/handlerHelpers';\nimport { isEnvFileExists, writeEnvFile } from './helpers/envFileHelpers';\n\nconst defaultConfig = {\n  handlersDir: './handlers',\n  region: 'eu-west-1',\n  table: 'credential-store',\n  projectName: 'credstash-to-envs',\n};\n\nconst debug = debugPkg('credstash-to-envs');\n\nexport default class CredstashToEnv {\n  constructor(config = {}) {\n    this.config = assign(defaultConfig, config);\n    this.configure();\n  }\n\n  configure() {\n    debug('Configure credstash...');\n    const credstash = new Credstash({ table: this.config.table, awsOpts: { region: this.config.region } });\n\n    debug('Init commanderjs...');\n    program\n      .version('0.1.0');\n\n    debug('Register handlers...');\n    this.handlers = map(getHandlers(this.config.handlersDir), (Handler) => {\n      const h = new Handler.default(program, credstash, this.config.projectName);\n      if (h.option) {\n        h.option();\n      }\n\n      return h;\n    });\n\n    debug('Sort handlers...');\n    this.handlers.sort(sortHandlers);\n    program.parse(process.argv);\n  }\n\n  async execute() {\n    const handlers = this.handlers;\n    return co(function* main() {\n      if (isEnvFileExists()) {\n        const overwrite = yield prompt.confirm('The file already exists, would you like to overwrite it? [y/n]');\n\n        if (!overwrite) {\n          debug('Do not overwrite the file');\n\n          process.exit();\n          return;\n        }\n      }\n\n      (async function handleAndWrite() {\n        let params = {};\n        for (const handler of handlers) {\n          params = assign({}, await handler.exec(params));\n        }\n\n        await writeEnvFile(params);\n        process.exit();\n      }());\n    });\n  }\n}\n"]}